<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dong.member.MemberDAO">

	<!-- 로그인 -->
	<select id="login" parameterType="kr.co.dong.member.MemberDTO"
		resultType="kr.co.dong.member.MemberDTO">
		SELECT id, password, name, phone, email, birth_date, gender, notification, region, role,
		is_active, created_at
		FROM users
		WHERE id = #{id} AND password = #{password}
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="kr.co.dong.member.MemberDTO">
    INSERT INTO users
    (id, password, name, phone, email, birth_date, gender, notification, region)
    VALUES
    (#{id}, #{password}, #{name}, #{phone}, #{email}, #{birth_date}, #{gender}, #{notification}, #{region})
</insert>

	<!-- 아이디 중복 체크 -->
	<select id="idCheck" parameterType="String" resultType="int">
		SELECT
		COUNT(*) FROM users WHERE id = #{id}
	</select>
	
	<!-- 회원 업데이트 -->
	<update id="userupdate" parameterType="kr.co.dong.member.MemberDTO">
		update users set name = #{name}, email = #{email}, birth_date = #{birth_date}, gender = #{gender}, region = #{region} 
		where id = #{id}
	</update>
	
	<!-- 관리자 회원 업데이트 -->
	<update id="adminupdate" parameterType="kr.co.dong.member.MemberDTO">
		update users set name = #{name}, email = #{email}, birth_date = #{birth_date}, gender = #{gender}, region = #{region}, role = #{role} 
		where id = #{id}
		
	</update>
	<!-- 회원 비밀번호 업데이트 -->
	<update id="updatePassword" parameterType="kr.co.dong.member.MemberDTO">
    UPDATE users SET password = #{password}
    WHERE id = #{id}
	</update>

	<!-- 내정보 불러오기 -->
	<select id="myDTO" parameterType="String"  resultType="kr.co.dong.member.MemberDTO">
		select id, password, name, phone, email, birth_date, gender, notification, region, role,
		is_active, created_at
		FROM users
		WHERE id = #{id}
	</select>
	
	<select id="allDTO" resultType="kr.co.dong.member.MemberDTO">
		select id, password, name, phone, email, birth_date, gender, notification, region, role,
		is_active, created_at
		FROM users 
	</select>
	
	

	<select id="selectone" parameterType="String" resultType="kr.co.dong.member.MemberDTO">
		select id, password, name, phone, email, birth_date, gender, notification, region, role,
		is_active, created_at
		FROM users
	    WHERE id = #{id}
	</select>
	
	<!-- 회원 탈퇴  -->
	<update id="deleteUser" parameterType="String">
	    UPDATE users SET is_active = 0 WHERE id = #{id}
	</update>
</mapper>